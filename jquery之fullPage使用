fullPage.js  是一个插件
应用：  
$('.wrapper').fullpage({
  afterLoad:function(anchor,index){   //加载到第二屏
    console.log('load',index);
  },
  onLeave:function(index){   //离开第一屏
    console.log('leave',index);
  }
})

//自己实现fullPage插件

<style>
    /*html,body{
        width:100%;
        height:100%;
        margin:0;
        overflow:hidden;
        position: relative;
    }
    .wrapper{       !*类似轮播图，让wrapper带着里面的内容整体移动，改变wrapper的top值*!
        position:absolute;
        left:0;
        top:0;
        width:100%;
        height:100%;
        background-color: orange;
    }
    .wrapper .section{
        width:100%;
        height:100%;
        background:red;
        position:relative;
    }
    .slide{
        float:left;
        width:js -> $(window).outerWidth();   !*屏幕的宽度*!
        height:100%;
    }
    .slideWrapper{
        position:absolute;
        left:0;
        top:0;
        width: js -> $(window).outerWidth() * slide.length;
    }*/
</style>
<body>

<div class="wrapper">
    <div class="section">
        <h3>第一屏</h3>
    </div>
    <div class="section">
        <h3>第二屏</h3>
    </div>
    <div class="section">
        <!--<div class="slideWrapper"> --> <!--绝对定位，参照section，改变left值，宽度为整个slide的宽度和-->
            <div class="slide">
                <h1>3-1</h1>
            </div>
            <div class="slide">
                <h1>3-2</h1>
            </div>
            <div class="slide">
                <h1>3-3</h1>
            </div>
        <!--</div>-->
    </div>
    <div class="section">
        <h3>第四屏</h3>
    </div>
</div>

</body>
<script  src="JQuery3.3.1.js"></script>
<script src="myFullPage.js"></script>
<script>
    $('.wrapper').myFullPage({
        colorsArr : ['red','green','blue'],
        onLeave:function (index,direction) {
            console.log(index,direction);
        },
        afterLoad:function (index,direction) {
            console.log(index,direction);
        }
    });
</script>

//实例方法
$.fn.extend({
    myFullPage:function (config) {
        //config.colorsArr
        //初始化变量
        var colorsArr = config.colorsArr;
        var $W = $(this);    //谁调用这个方法，this就指向谁
        var $Section = $W.find('.section');
        var commonStyle = {
            width: '100%',
            height:'100%'
        }
        //当前屏幕的宽度和高度
        var clientWidth = $(window).outerWidth();
        var clientHeight = $(window).outerHeight();
        var curIndex = 0; //索引
        var lock = true;  //加锁，防止点击过快出现问题
        //初始化 赋予样式
        $('html')
            .add('body')
                .css({
                    position:'relative',
                    overflow:'hidden',
                    margin:0
                })
                    .add($W)
                        .add($Section)
                            .css(commonStyle);
        $W.css({
            position:'absolute',left:0,top:0
        }).find('.section')
            .each(function (index,ele) {
                $(ele).css({
                    backgroundColor:colorsArr[index],
                    position:'relative'
                }).find('.slide')
                    .css({ float:'left',width:clientWidth,height:clientHeight })
                        .wrapAll('<div class="sliderWrapper"></div>')
        });
        $Section.find('.sliderWrapper').each(function (index,ele) {
            $(ele).css({width:$(ele).find('.slide').size() * clientWidth,height:clientHeight})
        })

        //js控制移动
        //active
        //先给第一个section  active
        //给每一个section下面的第一个slide innerActive
        //类名初始化
        $Section.eq(0)
            .addClass('active')
                .end().find('.sliderWrapper')
                    .css({position:'absolute',left:0,top:0})
                        .each(function (index,ele) {
                            $(ele).find('.slide').eq(0).addClass('innerActive')
                        })
        //控制移动
        $(document).on('keydown',function (e) {
            //e.which
            //left 37 top 38 right 39 bottom 40
            if(e.which==38||e.which==40){
                //垂直移动  $W
                if(lock){
                    lock = false;
                    var newTop = $W.offset().top;
                    var direction = '';
                    if(e.which==38 && curIndex!=0){
                        //top
                        direction = 'top';
                        config.onLeave(curIndex,direction);  //必须得在索引改变之前执行
                        curIndex--;
                        newTop+=clientHeight;

                    }else if(e.which==40 && curIndex!=$Section.size()-1){
                        //bottom
                        direction = 'bottom';
                        config.onLeave(curIndex,direction);  //必须得在索引改变之前执行
                        curIndex++;
                        newTop-=clientHeight;
                    }
                    $W.animate({
                        top:newTop
                    },350,'swing',function () {
                        lock = true;
                        $Section.eq(curIndex).addClass('active');
                        if(direction = 'top'){  //去掉之前的那个section的active样式  向上的话，是curIndex--，所以上一个是+1
                            $Section.eq(curIndex+1).removeClass('active');
                        }else if(direction = 'bottom'){
                            $Section.eq(curIndex-1).removeClass('active');
                        }
                        config.afterLoad(curIndex,direction);
                    })
                }

            }
            if(e.which==37||e.which==39){
                //水平移动 .active .sliderWrapper
                if(lock){
                    lock = false;
                    var $SW = $('.active').find('.slideWrapper');
                    var curShowDom = $SW.find('.innerActive');
                    var newLeft = $SW.offset().left;
                    var direction = null;
                    if(e.which==37 && curShowDom.index()!=0){
                        //left
                        newLeft+=clientWidth;
                        direction = 'left';
                    }else if(e.which==39 && curShowDom.index()!=$SW.find('.slide').size()-1){
                        //right
                        newLeft-=clientWidth;
                        direction = 'right';
                    }
                    $SW.animated({
                        left:newLeft
                    },200,'swing',function () {
                        lock = true;
                        direction != null?curShowDom.removeClass('innerActive'):'';
                        if(direction = 'left'){  //给前一个添加类名innerActive
                            curShowDom.prev().addClass('innerActive');
                        }else if(direction = 'right'){  //给后一个添加类名innerActive
                            curShowDom.next().addClass('innerActive');
                        }
                    })
                }
            }
        })
    }
})
